From ea462fe9101825b509194ceed2631511270a4a2a Mon Sep 17 00:00:00 2001
From: Ziming Zhang <zziming@vmware.com>
Date: Fri, 15 Nov 2019 14:38:48 +0800
Subject: [PATCH 1/3] fix list repos/tags count limitation

Signed-off-by: Ziming Zhang <zziming@vmware.com>
Change-Id: I87f3b71009f732e44c1650f4a84ba09e81a914d4
---
 src/common/utils/registry/registry.go   | 17 ++---
 src/common/utils/registry/repository.go | 86 ++++++++++++++-----------
 2 files changed, 58 insertions(+), 45 deletions(-)

diff --git a/src/common/utils/registry/registry.go b/src/common/utils/registry/registry.go
index 563c25ed22..548ab66b2b 100644
--- a/src/common/utils/registry/registry.go
+++ b/src/common/utils/registry/registry.go
@@ -80,13 +80,10 @@ func NewRegistry(endpoint string, client *http.Client) (*Registry, error) {
 // Catalog ...
 func (r *Registry) Catalog() ([]string, error) {
 	repos := []string{}
-	suffix := "/v2/_catalog?n=1000"
-	var url string
+	aurl := r.Endpoint.String() + "/v2/_catalog?n=1000"
 
-	for len(suffix) > 0 {
-		url = r.Endpoint.String() + suffix
-
-		req, err := http.NewRequest("GET", url, nil)
+	for len(aurl) > 0 {
+		req, err := http.NewRequest("GET", aurl, nil)
 		if err != nil {
 			return repos, err
 		}
@@ -112,11 +109,15 @@ func (r *Registry) Catalog() ([]string, error) {
 
 			repos = append(repos, catalogResp.Repositories...)
 			// Link: </v2/_catalog?last=library%2Fhello-world-25&n=100>; rel="next"
+			// Link: <http://domain.com/v2/_catalog?last=library%2Fhello-world-25&n=100>; rel="next"
 			link := resp.Header.Get("Link")
 			if strings.HasSuffix(link, `rel="next"`) && strings.Index(link, "<") >= 0 && strings.Index(link, ">") >= 0 {
-				suffix = link[strings.Index(link, "<")+1 : strings.Index(link, ">")]
+				aurl = link[strings.Index(link, "<")+1 : strings.Index(link, ">")]
+				if strings.Index(aurl, ":") < 0 {
+					aurl = r.Endpoint.String() + aurl
+				}
 			} else {
-				suffix = ""
+				aurl = ""
 			}
 		} else {
 			return repos, &commonhttp.Error{
diff --git a/src/common/utils/registry/repository.go b/src/common/utils/registry/repository.go
index 94bb2108d3..5f621723b5 100644
--- a/src/common/utils/registry/repository.go
+++ b/src/common/utils/registry/repository.go
@@ -69,49 +69,61 @@ func parseError(err error) error {
 // ListTag ...
 func (r *Repository) ListTag() ([]string, error) {
 	tags := []string{}
-	req, err := http.NewRequest("GET", buildTagListURL(r.Endpoint.String(), r.Name), nil)
-	if err != nil {
-		return tags, err
-	}
-
-	resp, err := r.client.Do(req)
-	if err != nil {
-		return tags, parseError(err)
-	}
-
-	defer resp.Body.Close()
-
-	b, err := ioutil.ReadAll(resp.Body)
-	if err != nil {
-		return tags, err
-	}
-
-	if resp.StatusCode == http.StatusOK {
-		tagsResp := struct {
-			Tags []string `json:"tags"`
-		}{}
+	aurl := buildTagListURL(r.Endpoint.String(), r.Name)
 
-		if err := json.Unmarshal(b, &tagsResp); err != nil {
+	for len(aurl) > 0 {
+		req, err := http.NewRequest("GET", aurl, nil)
+		if err != nil {
 			return tags, err
 		}
-		sort.Strings(tags)
-		tags = tagsResp.Tags
-
-		return tags, nil
-	} else if resp.StatusCode == http.StatusNotFound {
+		resp, err := r.client.Do(req)
+		if err != nil {
+			return nil, parseError(err)
+		}
 
-		// TODO remove the logic if the bug of registry is fixed
-		// It's a workaround for a bug of registry: when listing tags of
-		// a repository which is being pushed, a "NAME_UNKNOWN" error will
-		// been returned, while the catalog API can list this repository.
-		return tags, nil
-	}
+		defer resp.Body.Close()
+		b, err := ioutil.ReadAll(resp.Body)
+		if err != nil {
+			return tags, err
+		}
 
-	return tags, &commonhttp.Error{
-		Code:    resp.StatusCode,
-		Message: string(b),
+		if resp.StatusCode == http.StatusOK {
+			tagsResp := struct {
+				Tags []string `json:"tags"`
+			}{}
+
+			if err := json.Unmarshal(b, &tagsResp); err != nil {
+				return tags, err
+			}
+
+			tags = append(tags, tagsResp.Tags...)
+			// Link: </v2/_catalog?last=library%2Fhello-world-25&n=100>; rel="next"
+			// Link: <http://domain.com/v2/_catalog?last=library%2Fhello-world-25&n=100>; rel="next"
+			link := resp.Header.Get("Link")
+			if strings.HasSuffix(link, `rel="next"`) && strings.Index(link, "<") >= 0 && strings.Index(link, ">") >= 0 {
+				aurl = link[strings.Index(link, "<")+1 : strings.Index(link, ">")]
+				if strings.Index(aurl, ":") < 0 {
+					aurl = r.Endpoint.String() + aurl
+				}
+			} else {
+				aurl = ""
+			}
+		} else if resp.StatusCode == http.StatusNotFound {
+
+			// TODO remove the logic if the bug of registry is fixed
+			// It's a workaround for a bug of registry: when listing tags of
+			// a repository which is being pushed, a "NAME_UNKNOWN" error will
+			// been returned, while the catalog API can list this repository.
+			return tags, nil
+		} else {
+			return tags, &commonhttp.Error{
+				Code:    resp.StatusCode,
+				Message: string(b),
+			}
+		}
 	}
-
+	sort.Strings(tags)
+	return tags, nil
 }
 
 // ManifestExist ...

From e15d9940907ba4da6e1d65f98cf6918f568f1d6d Mon Sep 17 00:00:00 2001
From: Martin Juhl <m@rtinjuhl.dk>
Date: Wed, 20 Nov 2019 11:28:15 +0100
Subject: [PATCH 2/3] Fix test to not care about order

Signed-off-by: Martin Juhl <m@rtinjuhl.dk>
---
 src/replication/adapter/native/adapter_test.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/replication/adapter/native/adapter_test.go b/src/replication/adapter/native/adapter_test.go
index 27b0fe4f0d..cc25307d50 100644
--- a/src/replication/adapter/native/adapter_test.go
+++ b/src/replication/adapter/native/adapter_test.go
@@ -314,7 +314,7 @@ func Test_native_FetchImages(t *testing.T) {
 				for i, resource := range resources {
 					require.NotNil(t, resource.Metadata)
 					assert.Equal(t, tt.want[i].Metadata.Repository, resource.Metadata.Repository)
-					assert.Equal(t, tt.want[i].Metadata.Vtags, resource.Metadata.Vtags)
+					assert.Contains(t, tt.want[i].Metadata.Vtags, resource.Metadata.Vtags)
 				}
 			}
 		})

From 639d96a1f57abe16ed7ee85e22586e95ea6bacfa Mon Sep 17 00:00:00 2001
From: Martin Juhl <m@rtinjuhl.dk>
Date: Wed, 20 Nov 2019 12:23:08 +0100
Subject: [PATCH 3/3] Compare elements

Signed-off-by: Martin Juhl <m@rtinjuhl.dk>
---
 src/replication/adapter/native/adapter_test.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/replication/adapter/native/adapter_test.go b/src/replication/adapter/native/adapter_test.go
index cc25307d50..7f0ead94ee 100644
--- a/src/replication/adapter/native/adapter_test.go
+++ b/src/replication/adapter/native/adapter_test.go
@@ -314,7 +314,7 @@ func Test_native_FetchImages(t *testing.T) {
 				for i, resource := range resources {
 					require.NotNil(t, resource.Metadata)
 					assert.Equal(t, tt.want[i].Metadata.Repository, resource.Metadata.Repository)
-					assert.Contains(t, tt.want[i].Metadata.Vtags, resource.Metadata.Vtags)
+					assert.ElementsMatch(t, tt.want[i].Metadata.Vtags, resource.Metadata.Vtags)
 				}
 			}
 		})
